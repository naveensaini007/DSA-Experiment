#include<stdio.h> 
 
int sumofn(int n); 
 
int sumofn(int n){ 
    if(n==0){ 
        return 0; 
    } 
    else{ 
        return n+ sumofn(n-1); 
    } 
} 
 
int main(){ 
    int n; 
    printf("enter n:"); 
    scanf("%d",&n); 
    int result=sumofn(n); 
    printf("sum of first %d number is = %d\n",n,result); 
 
    return 0; 
} 
 
Output: 
 
 
b)Code for Fibonacci Series: 
#include<stdio.h> 
 
int fibser(int n); 
 
int fibser(int n){ 
    if (n==0){ 
        return 0; 
    } 
    if(n==1){ 
        return 1; 
    } 
    else{ 
        return fibser(n-1) + fibser(n-2); 
 
    } 
} 
 
int main(){ 
    int n; 
    printf("enter n:"); 
    scanf("%d",&n); 
    printf("Fibonacci series up to %d terms:\n", n); 
    for (int i = 0; i < n; i++) { 
        printf("%d ", fibser(i)); 
    } 
    printf("\n"); 
     
} 
 
Output: 
 
 
c)Tower of Hanoi 
 
#include <stdio.h> 
 
// Recursive function to solve Tower of Hanoi 
void towerOfHanoi(int n, char fromRod, char toRod, char auxRod) { 
    if (n == 1) { 
        printf("Move disk 1 from %c to %c\n", fromRod, toRod); 
        return; 
    } 
 
    towerOfHanoi(n - 1, fromRod, auxRod, toRod); 
    printf("Move disk %d from %c to %c\n", n, fromRod, toRod); 
    towerOfHanoi(n - 1, auxRod, toRod, fromRod); 
} 
 
int main() { 
    int n; 
    printf("Enter number of disks: "); 
    scanf("%d", &n); 
 
    printf("Steps to solve Tower of Hanoi with %d disks:\n", n); 
    towerOfHanoi(n, 'A', 'C', 'B');   
 
    return 0; 
} 